CREATE PROCEDURE [trans].[sp_rpt_stock_inventory]
@YEAR_MONTH VARCHAR(8),
@LOCATION_ID INT
AS
BEGIN
	DECLARE @LOCATON_NAME NVARCHAR(255)
	SET @LOCATON_NAME = (SELECT [NAME] FROM [APCSPRODB].MATERIAL.[LOCATIONS] WHERE [LOCATIONS].ID = @LOCATION_ID);
	SELECT *,
		CASE 
			WHEN [STOCK_QTY] - [INVENTORY_QTY] > 0 THEN 'STOCK > INVENTORY'
			WHEN [STOCK_QTY] - [INVENTORY_QTY] < 0 THEN 'INVENTORY > STOCK'
			ELSE ''
		END AS REMARK
	FROM (
	SELECT @LOCATON_NAME AS [LOCATION],
		'' AS [CATEGORY],
		'' AS [PRODUCT],
		[INV].BARCODE AS [BARCODE],
		0 AS [STOCK_QTY],
		1 AS [INVENTORY_QTY]
		FROM 
		[APCSProDB].TRANS.MATERIAL_INVENTORY_FILE [INV]
		WHERE [INV].PRODUCT_NAME IS NULL AND [INV].LOCATION_ID = @LOCATION_ID AND [INV].YEAR_MONTH = @YEAR_MONTH
	UNION ALL
	SELECT
		@LOCATON_NAME AS [LOCATION],
		[CATE].NAME AS [CATEGORY], 
		[PROD].NAME AS [PRODUCT],
		[MATERIAL].BARCODE,
		CASE
			WHEN [INV].LOCATION_ID <> [MATERIAL].LOCATION_ID THEN 0
		ELSE
			ISNULL([MATL].QUANTITY, 0)
		END AS [STOCK_QTY],
		ISNULL([INV].QUANTITY, 0) AS [INVENTORY_QTY]
		FROM [APCSProDB].TRANS.MATERIALS [MATERIAL]
		INNER JOIN (
			SELECT DISTINCT MATL.BARCODE, @LOCATION_ID AS LOCATION_ID FROM (
				SELECT BARCODE FROM [APCSProDB].TRANS.MATERIALS SQ_MAT WHERE SQ_MAT.LOCATION_ID = @LOCATION_ID
				UNION 
				SELECT BARCODE FROM [APCSProDB].TRANS.MATERIAL_INVENTORY_FILE SQ_INV WHERE SQ_INV.LOCATION_ID = @LOCATION_ID AND SQ_INV.YEAR_MONTH = @YEAR_MONTH
			) [MATL]) [MATL_BARCODE] ON [MATERIAL].BARCODE = [MATL_BARCODE].BARCODE
		INNER JOIN [APCSProDB].MATERIAL.PRODUCTIONS [PROD] ON [MATERIAL].MATERIAL_PRODUCTION_ID = [PROD].ID
		INNER JOIN [APCSProDB].MATERIAL.CATEGORIES [CATE] ON [PROD].CATEGORY_ID = [CATE].ID
		--INNER JOIN [APCSProDB].MATERIAL.[LOCATIONS] [LOCATION] ON [MATL_BARCODE].LOCATION_ID = [LOCATION].ID
		LEFT JOIN [APCSProDB].TRANS.MATERIALS [MATL] ON [MATERIAL].BARCODE = [MATL].BARCODE
		LEFT JOIN [APCSProDB].TRANS.MATERIAL_INVENTORY_FILE [INV] ON [MATERIAL].BARCODE = [INV].BARCODE AND [INV].LOCATION_ID = @LOCATION_ID AND [INV].YEAR_MONTH = @YEAR_MONTH AND [INV].PRODUCT_NAME IS NOT NULL
	)
	[TAB] WHERE [STOCK_QTY] - [INVENTORY_QTY] <> 0
	ORDER BY [TAB].[PRODUCT], [TAB].BARCODE
END


-- EXEC [trans].[sp_rpt_stock_inventory] '201909', 2