

CREATE PROCEDURE [trans].[sp_rpt_inventory_process]
@YEAR_MONTH VARCHAR(8),
@LOCATION_ID INT,
@USER_ID INT
AS
BEGIN
DECLARE @_NO INT
DECLARE @_YEAR_MONTH INT
DECLARE @_LOCATION_ID INT
DECLARE @_NAME NVARCHAR(50)
DECLARE @_QUANTITY DECIMAL(18, 6)
DECLARE @_DESCRIPTIONS NVARCHAR(50)
DECLARE @_BARCODE VARCHAR(255)
DECLARE @_INV_RPT_NO INT
DECLARE @_INV_CLASS_NAME NVARCHAR(50)
DECLARE @_INV_CLASS INT
DECLARE @_RACK_NO INT

DECLARE @_PREV_INV_RPT_NO INT
DECLARE @_PREV_INV_CLASS_NAME NVARCHAR(50)
DECLARE @_PREV_INV_CLASS INT
DECLARE @_PREV_RACK_NO INT

DELETE [APCSProDB].[TRANS].[RPT_INVENTORY_SHEETS] --WHERE [LOCATION_ID] = @LOCATION_ID

DECLARE DB_CURSOR CURSOR LOCAL FAST_FORWARD FOR
	SELECT
		  0 AS [NO]
		  ,[INVENTORY].YEAR_MONTH
		  ,[INVENTORY].LOCATION_ID
		  ,[PROD].[NAME]
		  ,[INVENTORY].[QUANTITY]
		  ,[UNIT].[DESCRIPTIONS]
		  ,[MATL].[BARCODE]
		  ,[CLASS].INV_RPT_NO
		  ,[CLASS].INV_CLASS_NAME
		  ,[CLASS].INV_CLASS
		  ,[CLASS].RACK_NO
	  FROM [APCSProDB].[TRANS].[MATERIALS] [MATL]
			INNER JOIN [APCSProDB].[MATERIAL].[PRODUCTIONS] [PROD] ON [MATL].MATERIAL_PRODUCTION_ID = [PROD].ID
			INNER JOIN [APCSProDB].[TRANS].[MATERIAL_INVENTORY_FILE] [INVENTORY] ON [INVENTORY].BARCODE = [MATL].BARCODE
			INNER JOIN [APCSProDB].[MATERIAL].INVENTORY [CLASS] ON [CLASS].INV_CLASS = [INVENTORY].INV_CLASS AND [CLASS].RACK_NO = [INVENTORY].RACK_NO --AND CLASS.LOCATION_ID = INVENTORY.LOCATION_ID
			INNER JOIN [APCSProDB].[MATERIAL].[MATERIAL_CODES] [UNIT] ON [PROD].UNIT_CODE = [UNIT].CODE AND [UNIT].[GROUP] = 'package_unit'
	  --WHERE [INVENTORY].LOCATION_ID = @LOCATION_ID 
	  AND [INVENTORY].YEAR_MONTH = @YEAR_MONTH
	  AND [PROD].[NAME] IS NOT NULL
	  ORDER BY [CLASS].INV_RPT_NO, ISNULL([PROD].[NAME], 'ZZZZZZZZZZ'), [MATL].[BARCODE];

OPEN DB_CURSOR  
FETCH NEXT FROM DB_CURSOR INTO @_NO, @_YEAR_MONTH, @_LOCATION_ID, @_NAME, @_QUANTITY, @_DESCRIPTIONS, @_BARCODE, @_INV_RPT_NO, @_INV_CLASS_NAME, @_INV_CLASS, @_RACK_NO
DECLARE @RPT_NO INT
DECLARE @ROW_NO INT
DECLARE @PAGE_NO INT
DECLARE @MAX_ROWS INT

SET @RPT_NO = CAST(@_INV_RPT_NO AS INT)
SET @ROW_NO = 1
SET @PAGE_NO = 0
SET @MAX_ROWS = 30

	WHILE @@FETCH_STATUS = 0  
	BEGIN
		  IF @RPT_NO <> CAST(@_INV_RPT_NO AS INT) -- NEW PAGE
		  BEGIN		  
			PRINT @ROW_NO
			PRINT CAST(@RPT_NO AS INT)
			PRINT CAST(@_INV_RPT_NO AS INT)
			PRINT 'NEW PAGE'
		    IF @ROW_NO = 1
			BEGIN
				SET @RPT_NO = CAST(@_INV_RPT_NO AS INT)
			END
		    ELSE
			BEGIN
				WHILE @ROW_NO <= @MAX_ROWS -- FIL PENDING EMPTY ROWS LEFT
				BEGIN
					PRINT 'EMPTY ROW 1'
					--NO, YEAR_MONTH, LOCATION_ID, NAME, QUANTITY, DESCRIPTIONS, BARCODE, INV_RPT_NO, INV_CLASS_NAME, INV_CLASS, RACK_NO
					INSERT [APCSProDB].[TRANS].[RPT_INVENTORY_SHEETS] SELECT @ROW_NO, @_YEAR_MONTH, @_LOCATION_ID, NULL, NULL, NULL, NULL, CAST(@_PREV_INV_RPT_NO AS INT) + @PAGE_NO, @_PREV_INV_CLASS_NAME, @_PREV_INV_CLASS, @_PREV_RACK_NO
					SET @ROW_NO = @ROW_NO + 1
				END
				SET @ROW_NO = 1
				SET @RPT_NO = CAST(@_INV_RPT_NO AS INT)
			END
			SET @PAGE_NO = 0
		  END
		  PRINT CAST(@ROW_NO AS VARCHAR(20)) + ' ' + CAST(@PAGE_NO AS VARCHAR(20)) + ' ' + @_BARCODE + ' ' + @_NAME
		  INSERT [APCSProDB].[TRANS].[RPT_INVENTORY_SHEETS] SELECT @ROW_NO, @_YEAR_MONTH, @_LOCATION_ID, @_NAME, @_QUANTITY, @_DESCRIPTIONS, @_BARCODE, CAST(@_INV_RPT_NO AS INT) + @PAGE_NO, @_INV_CLASS_NAME, @_INV_CLASS, @_RACK_NO
		  
		  SET @ROW_NO = @ROW_NO + 1

		  IF @ROW_NO > @MAX_ROWS --(CHANGE FROM 25 TO 30 // NO NEED TO FILL SHEET)
		  BEGIN
			--WHILE @ROW_NO <= @MAX_ROWS -- FILL PENDING EMPTY ROWS LEFT
			--BEGIN
			--	PRINT 'EMPTY ROW 2'
			--	INSERT [APCSProDB].[TRANS].[RPT_INVENTORY_SHEETS] SELECT @ROW_NO, @_YEAR_MONTH, @_LOCATION_ID, NULL, NULL, NULL, NULL, CAST(@_INV_RPT_NO AS INT) + @PAGE_NO, @_INV_CLASS_NAME, @_INV_CLASS, @_RACK_NO
			--	SET @ROW_NO = @ROW_NO + 1
			--END
			SET @ROW_NO = 1
			SET @PAGE_NO = @PAGE_NO + 1
		  END
		  
		  SET @_PREV_INV_RPT_NO = @_INV_RPT_NO
		  SET @_PREV_INV_CLASS_NAME = @_INV_CLASS_NAME
		  SET @_PREV_INV_CLASS = @_INV_CLASS
		  SET @_PREV_RACK_NO = @_RACK_NO

		  FETCH NEXT FROM DB_CURSOR INTO @_NO, @_YEAR_MONTH, @_LOCATION_ID, @_NAME, @_QUANTITY, @_DESCRIPTIONS, @_BARCODE, @_INV_RPT_NO, @_INV_CLASS_NAME, @_INV_CLASS, @_RACK_NO
	END
	
	IF @ROW_NO <> 1
	BEGIN
		WHILE @ROW_NO <= @MAX_ROWS -- FILL PENDING EMPTY ROWS LEFT
		BEGIN
			PRINT 'EMPTY ROW 3'
			INSERT [APCSProDB].[TRANS].[RPT_INVENTORY_SHEETS] SELECT @ROW_NO, @_YEAR_MONTH, @_LOCATION_ID, NULL, NULL, NULL, NULL, CAST(@_PREV_INV_RPT_NO AS INT) + @PAGE_NO, @_PREV_INV_CLASS_NAME, @_PREV_INV_CLASS, @_PREV_RACK_NO
			SET @ROW_NO = @ROW_NO + 1
		END
	END

	CLOSE DB_CURSOR  
	DEALLOCATE DB_CURSOR;
END


--EXEC [trans].[sp_rpt_inventory_process] '201910', 1, 1

--SELECT * FROM [APCSProDB].[TRANS].[RPT_INVENTORY_SHEETS] WHERE LOCATION_ID = 2 AND YEAR_MONTH = '201903';