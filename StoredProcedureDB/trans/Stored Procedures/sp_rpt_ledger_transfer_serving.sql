CREATE PROCEDURE [trans].[sp_rpt_ledger_transfer_serving]
@YEAR_MONTH INTEGER,
@LOCATION_ID INT,
@USER_ID INT
AS
BEGIN

DECLARE @_NAME NVARCHAR(50)
DECLARE @_QUANTITY DECIMAL(18, 6)
DECLARE DB_CURSOR CURSOR LOCAL FAST_FORWARD FOR
	SELECT [PROD].[NAME], 
	SUM(ISNULL(RECORD.QUANTITY, 0)) AS QUANTITY 
		FROM [APCSProDB].[TRANS].[MATERIAL_RECORDS] [RECORD]
		INNER JOIN [APCSProDB].[TRANS].[MATERIALS] [MATERIALS] ON [RECORD].MATERIAL_ID = [MATERIALS].ID
		INNER JOIN [APCSProDB].[MATERIAL].PRODUCTIONS [PROD] ON [RECORD].MATERIAL_PRODUCTION_ID = [PROD].ID
		INNER JOIN [APCSPRODB].MATERIAL.LOCATIONS [LOC] ON [RECORD].LOCATION_ID = [LOC].ID
	WHERE [RECORD].RECORD_CLASS = 2 
	AND [MATERIALS].LOCATION_ID NOT IN (SELECT ID FROM [APCSProDB].MATERIAL.LOCATIONS WHERE WH_CODE IN ('QI900', 'QI999'))
	AND CAST(DATEPART(YYYY, [RECORD].RECORDED_AT) AS VARCHAR(4)) + REPLACE(STR(DATEPART(MM, [RECORD].RECORDED_AT), 2), SPACE(1), '0') = @YEAR_MONTH
	GROUP BY [PROD].[NAME];
	
	OPEN DB_CURSOR  
	FETCH NEXT FROM DB_CURSOR INTO @_NAME, @_QUANTITY
		WHILE @@FETCH_STATUS = 0  
		BEGIN
			PRINT @_NAME
			PRINT @_QUANTITY
			UPDATE [APCSProDB].[TRANS].[MATERIAL_LEDGER_PROCESS] SET serv1_qty = ISNULL(@_QUANTITY, 0) WHERE [PRODUCT_NAME] = @_NAME;
			FETCH NEXT FROM DB_CURSOR INTO @_NAME, @_QUANTITY
		END
	CLOSE DB_CURSOR  
	DEALLOCATE DB_CURSOR 
END;


-- EXEC [trans].[sp_rpt_ledger_transfer_serving] '201910', 2, 1